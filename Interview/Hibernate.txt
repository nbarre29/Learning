-> What is the difference between Session and SessionFactory in Hibernate?

SessionFactory is a factory class that creates Session objects. It is a thread-safe object and usually created once during application initialization.

Session represents a single-threaded unit of work with the database. It provides methods to perform database operations like saving, updating, or deleting objects. Sessions are not thread-safe and should be created and closed for each unit of work.


-> Explain the Hibernate object states.

Hibernate defines three object states: Transient, Persistent, and Detached.

Transient: An object is in the transient state when it is newly created and not associated with any Session.

Persistent: An object is in the persistent state when it is associated with a Session and is being managed by Hibernate.

Detached: An object is in the detached state when it is no longer associated with a Session but still has persistent data.


transient
the entity has just been instantiated and is not associated with a persistence context. It has no persistent representation in the database and typically no identifier value has been assigned (unless the assigned generator was used).

managed or persistent
the entity has an associated identifier and is associated with a persistence context. It may or may not physically exist in the database yet.

detached
the entity has an associated identifier but is no longer associated with a persistence context (usually because the persistence context was closed or the instance was evicted from the context)

removed
the entity has an associated identifier and is associated with a persistence context, however, it is scheduled for removal from the database.
https://docs.jboss.org/hibernate/orm/6.2/userguide/html_single/Hibernate_User_Guide.html



-> What is Lazy Loading in Hibernate?

Lazy Loading is a feature in Hibernate where related entities or collections are not loaded from the database until they are explicitly accessed. It helps to optimize performance by loading data on-demand and reduces the amount of data retrieved from the database.


-> What is the difference between eager loading and lazy loading?

Eager Loading is the immediate fetching of associated entities or collections along with the main entity. It loads all related data at once, which can lead to performance issues if there is a large amount of data to fetch.
Lazy Loading, as mentioned earlier, delays the loading of associated entities or collections until they are actually accessed. It is a more efficient approach for loading data when it is not immediately needed.


-> What are the different types of Hibernate associations?

Hibernate supports various types of associations between entities:
One-to-One
One-to-Many
Many-to-One
Many-to-Many


-> What is the Hibernate caching mechanism?

Hibernate provides caching mechanisms to improve performance by reducing database access. There are different levels of caching, such as first-level cache (Session cache), second-level cache (SessionFactory cache), and query cache. Caching helps to avoid unnecessary database trips by storing and reusing frequently accessed data.


-> What is the difference between a natural key and a surrogate key?

A natural key is a key that consists of one or more columns that have meaningful values and can uniquely identify a record in a database table. Examples of natural keys include a person's Social Security Number or an email address.
A surrogate key is an artificial key, typically an auto-generated number, that is used as a primary key in a database table. It has no inherent meaning and is only used to uniquely identify records.







