Boomi specializes in integration platform as a service (iPaaS) that includes ETL(Extract, transform, load) capabilities.

ETL: In computing, extract, transform, load is the general procedure of copying data from one or more sources into a destination system which represents the data differently from the source or in a different context than the source.





AWS:
https://medium.com/awesome-cloud/aws-difference-between-sqs-and-sns-61a397bf76c5


AWS Lambda: Serverless architecture abstracts away the patching and OS update manual work. 

Amazon EC2: With EC2, you’ll have to take care of the security layer at the instance level. The security layer decides and controls the traffic allowed to communicate with each instance. Each instance can have multiple security layers that dictate the allowed inbound traffic through certain protocols like TCP, UDP, ICMP, etc.

Creating policies that will have correct permissions is tiresome and a work of trial and error. This is especially true when you’re working with a growing team. Handling permissions for every specific business needs mean changing policies often and you end up increasing the unwanted granularity.

Meanwhile, with Lambda, this is entirely taken care of by AWS along with OS patches and system maintenance.


Lambda, clearly lags while dealing with complex processing over EC2. 

Dynamo db. We observed throttling issues with dynamo db when we receive a high number of requests for a transaction.
when we receive more than 500 files per transactions. and if there are multiple such requests.

____________________________________________________________
what is serverless ?
for a service to be serverless it needs to have these 4 properties
1) no servers to manage, either physical or virtual
2) it scales with demand automatically, no need to confiure any autoscaling groups
3) never pay for idle, only pay for what we use.
4) it is inherently highly available and fault tolerant

there are many serverless services 
for example, dynamo, api gateway, sns, sqs, lambda, Kinesis

https://aws.amazon.com/kinesis/data-streams
Amazon Kinesis Data Streams is a serverless streaming data service that makes it easy to capture, process, and store data streams at any scale.
Amazon Kinesis Data Streams is a fully managed, serverless data streaming service that stores and ingests various streaming data in real time at any scale.

https://www.romexsoft.com/blog/serverless-services-on-aws-an-overview/
1. Computing
AWS Lambda
AWS Fargate
2. Databases
AWS DynamoDB
Amazon Aurora
3. Messaging
Amazon SNS
Amazon SQS
4. Monitoring
AWS CloudWatch
Amazon QuickSight
5. Service integration
AWS Step Functions
Amazon API Gateway
6. Security
Amazon Cognito
AWS KMS
7. Data streaming service
Kinesis
____________________________________________________________

https://docs.aws.amazon.com/lambda/latest/dg/lambda-java.html
https://docs.aws.amazon.com/lambda/latest/dg/java-samples.html
____________________________________________________________

https://gist.github.com/jlafon/d8f91086e3d00c4bff3b
DynamoDB supports two types of primary keys, a Hash Key and a Hash and Range Key.
A Hash Key consists of a single attribute that uniquely identifies an item.
A Hash and Range Key consists of two attributes that together, uniquely identify an item.
____________________________________________________________
https://docs.aws.amazon.com/lambda/latest/operatorguide/execution-environments.html
Which of the following Lambda design best practices can help to reduce cold start duration?
Reducing cold starts with Provisioned Concurrency

Unlike on-demand Lambda, this means that all setup activities happen ahead of invocation, including running the initialization code. For example, a function with a Provisioned Concurrency of 6 has 6 execution environments prepared ahead of when the invocations occur.

https://www.youtube.com/watch?v=7Bc97tAySkU (AWS Lambda Provisioned Concurrency | Lambda Scaling and Concurrency 101 | Lambda Account Concurrency)
"Reserved concurrency" therefore means "max concurrency".
"provisioned concurrency" means "number of always running instances"
____________________________________________________________
