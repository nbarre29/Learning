-> Find the longest string using arguments object.
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments

function longestString() {
  let longest = "";
  for (let i = 0; i < arguments.length; i++) {
    if (arguments[i].length > longest.length) {
      longest = arguments[i];
    }
  }
  return longest;
}

const result = longestString("apple", "banana", "cherry");
console.log(result); // Output: "banana"

The arguments object is a local variable available within all non-arrow functions. You can refer to a function's arguments inside that function by using its arguments object.


-> rewritten version of the above longestString function using an arrow function:

const longestString = (...args) => {
  let longest = "";
  for (let i = 0; i < args.length; i++) {
    if (args[i].length > longest.length) {
      longest = args[i];
    }
  }
  return longest;
};

const result = longestString("apple", "banana", "cherry");
console.log(result); // Output: "banana" 

The arrow function syntax allows for a more concise way of defining functions. In this case, the longestString function is defined using the arrow function syntax with the rest parameter (...arguments) to capture multiple arguments into an array.

https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters


-> To enhance the above function to find all the longest strings instead of just one, we can modify it to return an array containing all the longest strings found. Here's the enhanced version of the longestString function using an arrow function:

const longestStrings = (...arguments) => {
  let longestLength = 0;
  const longestStrings = [];

  for (let i = 0; i < arguments.length; i++) {
    const currentLength = arguments[i].length;

    if (currentLength > longestLength) {
      longestLength = currentLength;
      longestStrings.length = 0; // Clear the array since we found a new longest length
    }

    if (currentLength === longestLength) {
      longestStrings.push(arguments[i]); // Add the current string to the array of longest strings
    }
  }

  return longestStrings;
};

const result = longestStrings("apple", "banana", "cherry", "orange", "kiwi");
console.log(result); // [ 'banana', 'cherry', 'orange' ]


-> https://www.youtube.com/watch?v=gaminoBsQx0 (Best Debugging Tips For Beginners) 

<!-- index.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Debugging</title>
    <script defer src="script.js"></script>
</head>
<body>
    
</body>
</html>


// script.js
const users = [
  { name: "Kyle", age: 24 },
  { name: "Joey" },
  { name: "Bailee", age: 22 },
  { name: "Jim", age: 34 },
  { name: "Phil", age: 24 },
  { name: "Naveen" },
];

users.forEach((user) => {
  printUser(user);
});

function printUser(user) {
  if (user.age != null) {
    console.log(
      `User ${user.name} will be ${user.age + 5} years old in five years`
    );
  } else {
    console.log(`User is called ${user.name}`);
  }
}


<!-- index.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Debugging</title>
    <script defer src="script.js"></script>
</head>
<body>
    <input type="text" id="textElement">
    <button id="btn">Print</button>    
</body>
</html>

// script.js
const button = document.getElementById('btn');
const input = document.getElementById('textElement');

/* console.log(button);
console.log(input); */

btn.addEventListener("click", () => {
  console.log(input.value);
});






